HTML 5 elements - main - SEO easy of use.
<a href="#"> create dead link
<input> <img> <hr>  self closing tags

<label id="name-label" for="name">Name</label>
      <input
        type="text"
        name="name"
        id="name"
        placeholder="Enter your name"
        required
      />
radio and radio button group example(same for checkbox):  // must be surrounded by form element. 
<label for="indoor">
    <input id="indoor" value="indoor" type="radio" checked name="indoor-outdoor">Indoor
</label>
<label for="outdoor">
    <input id="outdoor" value="outdoor" type="radio" name="indoor-outdoor">outdoor
</label>

The ! and uppercase DOCTYPE is important, especially for older browsers. The html is not case sensitive.
<!DOCTYPE html>
<html>
</html>

<Strong> - font-weight: bold;
<u>      - text-decoration: underline;
<a>      - tag has default underline formatting.
<em>     - font-style: italic;
<s>      - text-decoration: line-through;
<hr>     - add horizontal line , self closing tag.

There should be only one in a page : <h1> <main> for better semantic meaning.
structure :
<header>
    <nav></nav>
</header>
    <main></main>
    <article>article
        <section></section>
    </article>
footer

add audio to page :
controls is a boolean , if its there tell browser to show the show audio controls
<audio id="meowClip" controls>
  <source src="audio/meow.mp3" type="audio/mpeg" />
</audio>

show charts , data visualization : 
<figure>
  <img src="roundhouseDestruction.jpeg" alt="Photo of Camper Cat executing a roundhouse kick">
  <br>
  <figcaption>
    Master Camper Cat demonstrates proper form of a roundhouse kick.
  </figcaption>
</figure>

The fieldset tag surrounds the entire grouping of radio buttons to achieve this. 
It often uses a legend tag to provide a description for the grouping, 

<time datetime="2016-09-15">Thursday, September 15<sup>th</sup></time>. - will read out the date to screen reader

display: none; or visibility: hidden;-> hides content for everyone, including screen reader users
width: 0px; height: 0px; removes that element from the flow of your document,
meaning screen readers will ignore it

css class for things to visible only for screen reader and visually hidden : 
.sr-only {
  position: absolute;
  left: -10000px;
  width: 1px;
  height: 1px;
  top: auto;
  overflow: hidden;
}

recommended 4.5 to 1 contrast ratio for normal text. 
4.5:1 contrast ratio can be reached by shading (adding black to) the darker color and 
tinting (adding white to) the lighter color

accesskey attribute to specify a shortcut key to activate or bring focus to an element. 
<button accesskey="b">Important Button</button>

using tabindex also enables the CSS pseudo-class :focus to work on the  tag.
 <p tabindex="0">Instructions: </p>
 p:focus {
    background-color: yellow;
  }
  click tab it will turn yellow when its on focus

  Setting a tabindex="1" will bring keyboard focus to that element first.
  
responsive design : 
@media (min-height: 350px) { /* CSS Rules */ }
@media (max-width: 100px) { /* CSS Rules */ }

make image responsive : 
.responsive-img {
  max-width:100%;
  height:auto;
}
Use a Retina Image for Higher Resolution Displays

always set the width and height the half of the original size

Viewport units are relative to the viewport dimensions (width or height) of a device,
and percentages are relative to the size of the parent container element.

The four different viewport units are:

vw (viewport width): 10vw would be 10% of the viewport's width.
vh (viewport height): 3vh would be 3% of the viewport's height.
vmin (viewport minimum): 70vmin would be 70% of the viewport's smaller dimension (height or width).
vmax (viewport maximum): 100vmax would be 100% of the viewport's bigger dimension (height or width).


